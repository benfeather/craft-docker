FROM php:apache

# ----------------------------------------
# Install / Update Packages
# ----------------------------------------

# General update
RUN apt-get update && apt-get upgrade --yes --quiet

# Install: ImageMagick
RUN apt-get install --yes --quiet libmagickwand-dev && \
    pecl install imagick && \
    docker-php-ext-enable imagick

# Install: MYSQL
RUN docker-php-ext-install pdo_mysql

# Install: Zip
RUN apt-get install --yes --quiet libzip-dev && \
    docker-php-ext-install zip

# Install: Unzip
RUN apt-get install --yes --quiet unzip

# Install: Intl (Internationalization Support)
RUN docker-php-ext-install intl

# Install: Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer

# ----------------------------------------
# Configure
# ----------------------------------------

# Apache: Change document root to craft-cms' default web root
ENV APACHE_DOCUMENT_ROOT=/var/www/project/web
RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf
RUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

# Apache: Enable features
RUN a2enmod rewrite 
RUN a2enmod ssl

# Apache: Update config
RUN touch /etc/apache2/apache2.conf && \
    echo "ServerName localhost" >> /etc/apache2/apache2.conf

# PHP: Update config
RUN touch /usr/local/etc/php/php.ini \
    echo "upload_max_filesize = 10M" >> /usr/local/etc/php/php.ini && \
    echo "post_max_size = 10M" >> /usr/local/etc/php/php.ini && \
    echo "max_execution_time = 300" >> /usr/local/etc/php/php.ini && \
    echo "memory_limit = 256M" >> /usr/local/etc/php/php.ini && \
    echo "allow_url_fopen = true" >> /usr/local/etc/php/php.ini

# ----------------------------------------
# Setup Craft CMS
# ----------------------------------------

WORKDIR /var/www/project

# Copy over the directories/files php needs access to
COPY --chown=www-data:www-data ./cms/composer.* /var/www/project/

# Create the storage directory and make it writeable by PHP
RUN mkdir -p /var/www/project/storage && \
    chown -R www-data:www-data /var/www/project/storage

# Create the cpresources directory and make it writeable by PHP
RUN mkdir -p /var/www/project/web/cpresources && \
    chown -R www-data:www-data /var/www/project/web/cpresources

# If `composer.lock` OR `/vendor` is missing, 
# - Do a `composer install` without running any Composer scripts
# - Force permissions
# Start apache
CMD if [ ! -f "./composer.lock" ] || [ ! -d ./vendor -o ! "$(ls -A ./vendor)" ]; then \
        composer install --no-scripts --optimize-autoloader --no-interaction; \
        chown -R www-data:www-data /var/www/project/vendor; \
    fi \
    && \
    apachectl -D FOREGROUND
